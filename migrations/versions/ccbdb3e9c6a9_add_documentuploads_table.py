"""Add DocumentUploads table

Revision ID: ccbdb3e9c6a9
Revises: 
Create Date: 2024-11-29 15:10:16.440507

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'ccbdb3e9c6a9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index('name')

    op.drop_table('roles')
    op.drop_table('expenses')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('email')
        batch_op.drop_index('username')

    op.drop_table('users')
    with op.batch_alter_table('rate_limit', schema=None) as batch_op:
        batch_op.drop_index('unique_key')

    op.drop_table('rate_limit')
    op.drop_table('transactions')
    op.drop_table('flask_limiter')
    with op.batch_alter_table('statuses', schema=None) as batch_op:
        batch_op.drop_index('name')

    op.drop_table('statuses')
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.add_column(sa.Column('performed_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('action',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.drop_constraint('audit_log_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['performed_by'], ['id'])
        batch_op.drop_column('timestamp')
        batch_op.drop_column('user_id')
        batch_op.drop_column('previous_value')
        batch_op.drop_column('new_value')
        batch_op.drop_column('table_name')

    with op.batch_alter_table('cash_advance', schema=None) as batch_op:
        batch_op.alter_column('officer_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('purpose',
               existing_type=mysql.TEXT(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('cash_advance_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['officer_id'], ['id'])
        batch_op.drop_column('management_approval_doc')
        batch_op.drop_column('branch')
        batch_op.drop_column('request_date')
        batch_op.drop_column('proforma_invoice')
        batch_op.drop_column('approval_date')

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('branch_id', sa.Integer(), nullable=False))
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.drop_index('name')
        batch_op.create_foreign_key(None, 'branches', ['branch_id'], ['id'])

    with op.batch_alter_table('document_uploads', schema=None) as batch_op:
        batch_op.add_column(sa.Column('file_name', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('file_type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('uploaded_by', sa.Integer(), nullable=False))
        batch_op.drop_constraint('document_uploads_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['uploaded_by'], ['id'])
        batch_op.drop_column('document_type')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('expense_approval_workflow', schema=None) as batch_op:
        batch_op.add_column(sa.Column('officer_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('supervisor_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('reviewer_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('expense_approval_workflow_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('expense_approval_workflow_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'expense', ['expense_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['reviewer_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['officer_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['supervisor_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['approver_id'], ['id'])
        batch_op.drop_column('approval_status')
        batch_op.drop_column('approval_date')

    with op.batch_alter_table('file_metadata', schema=None) as batch_op:
        batch_op.add_column(sa.Column('file_name', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('uploaded_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('document_id', sa.Integer(), nullable=True))
        batch_op.alter_column('file_type',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('file_size',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('file_metadata_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'document_uploads', ['document_id'], ['id'])
        batch_op.drop_column('upload_id')

    with op.batch_alter_table('notification_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_notifications_enabled', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('sms_notifications_enabled', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('push_notifications_enabled', sa.Boolean(), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('notification_settings_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('is_enabled')
        batch_op.drop_column('notification_type')

    with op.batch_alter_table('opex_capex_retirement', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.alter_column('branch',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('department',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.drop_constraint('opex_capex_retirement_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])
        batch_op.drop_column('cash_advance')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('receipt_filename')
        batch_op.drop_column('refund_reimbursement')
        batch_op.drop_column('created_at')
        batch_op.drop_column('officer_id')
        batch_op.drop_column('less_what')

    with op.batch_alter_table('petty_cash_advance', schema=None) as batch_op:
        batch_op.add_column(sa.Column('department', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('items', sa.JSON(), nullable=False))
        batch_op.add_column(sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.alter_column('branch',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_constraint('petty_cash_advance_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])
        batch_op.drop_column('purpose')
        batch_op.drop_column('amount')
        batch_op.drop_column('request_date')
        batch_op.drop_column('created_at')
        batch_op.drop_column('officer_id')

    with op.batch_alter_table('petty_cash_retirement', schema=None) as batch_op:
        batch_op.add_column(sa.Column('department', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('items', sa.JSON(), nullable=False))
        batch_op.add_column(sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.alter_column('branch',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_constraint('petty_cash_retirement_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])
        batch_op.drop_column('retired_amount')
        batch_op.drop_column('retirement_date')
        batch_op.drop_column('created_at')
        batch_op.drop_column('officer_id')
        batch_op.drop_column('details')
        batch_op.drop_column('receipt')

    with op.batch_alter_table('request_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('request_type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('request_history_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('request_history_ibfk_2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('change_type')
        batch_op.drop_column('previous_value')
        batch_op.drop_column('request_id')
        batch_op.drop_column('changed_by')
        batch_op.drop_column('change_timestamp')
        batch_op.drop_column('new_value')

    with op.batch_alter_table('stationary_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('department', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('items', sa.JSON(), nullable=False))
        batch_op.add_column(sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.alter_column('branch',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_constraint('stationary_request_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])
        batch_op.drop_column('item_name')
        batch_op.drop_column('justification')
        batch_op.drop_column('quantity')
        batch_op.drop_column('request_date')
        batch_op.drop_column('created_at')
        batch_op.drop_column('officer_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('stationary_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('officer_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('request_date', sa.DATE(), server_default=sa.text('(curdate())'), nullable=True))
        batch_op.add_column(sa.Column('quantity', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('justification', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('item_name', mysql.VARCHAR(length=255), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('stationary_request_ibfk_1', 'users', ['officer_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('branch',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('created_by')
        batch_op.drop_column('total_amount')
        batch_op.drop_column('items')
        batch_op.drop_column('department')

    with op.batch_alter_table('request_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('new_value', mysql.JSON(), nullable=True))
        batch_op.add_column(sa.Column('change_timestamp', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('changed_by', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('request_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('previous_value', mysql.JSON(), nullable=True))
        batch_op.add_column(sa.Column('change_type', mysql.VARCHAR(length=50), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('request_history_ibfk_2', 'expenses', ['request_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('request_history_ibfk_1', 'users', ['changed_by'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('created_at')
        batch_op.drop_column('user_id')
        batch_op.drop_column('status')
        batch_op.drop_column('request_type')

    with op.batch_alter_table('petty_cash_retirement', schema=None) as batch_op:
        batch_op.add_column(sa.Column('receipt', sa.BLOB(), nullable=True))
        batch_op.add_column(sa.Column('details', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('officer_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('retirement_date', sa.DATE(), server_default=sa.text('(curdate())'), nullable=True))
        batch_op.add_column(sa.Column('retired_amount', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('petty_cash_retirement_ibfk_1', 'users', ['officer_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('branch',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('created_by')
        batch_op.drop_column('total_amount')
        batch_op.drop_column('items')
        batch_op.drop_column('description')
        batch_op.drop_column('department')

    with op.batch_alter_table('petty_cash_advance', schema=None) as batch_op:
        batch_op.add_column(sa.Column('officer_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('request_date', sa.DATE(), server_default=sa.text('(curdate())'), nullable=True))
        batch_op.add_column(sa.Column('amount', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('purpose', mysql.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('petty_cash_advance_ibfk_1', 'users', ['officer_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('branch',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('created_by')
        batch_op.drop_column('total_amount')
        batch_op.drop_column('items')
        batch_op.drop_column('description')
        batch_op.drop_column('department')

    with op.batch_alter_table('opex_capex_retirement', schema=None) as batch_op:
        batch_op.add_column(sa.Column('less_what', mysql.DECIMAL(precision=10, scale=2), server_default=sa.text("'0.00'"), nullable=True))
        batch_op.add_column(sa.Column('officer_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('refund_reimbursement', mysql.DECIMAL(precision=10, scale=2), server_default=sa.text("'0.00'"), nullable=True))
        batch_op.add_column(sa.Column('receipt_filename', mysql.VARCHAR(length=255), nullable=True))
        batch_op.add_column(sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('cash_advance', mysql.DECIMAL(precision=10, scale=2), server_default=sa.text("'0.00'"), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('opex_capex_retirement_ibfk_1', 'users', ['officer_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('department',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('branch',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('created_by')
        batch_op.drop_column('status')

    with op.batch_alter_table('notification_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('notification_type', mysql.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('is_enabled', mysql.TINYINT(display_width=1), server_default=sa.text("'1'"), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('notification_settings_ibfk_1', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.drop_column('push_notifications_enabled')
        batch_op.drop_column('sms_notifications_enabled')
        batch_op.drop_column('email_notifications_enabled')

    with op.batch_alter_table('file_metadata', schema=None) as batch_op:
        batch_op.add_column(sa.Column('upload_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('file_metadata_ibfk_1', 'document_uploads', ['upload_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('file_size',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('file_type',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_column('document_id')
        batch_op.drop_column('uploaded_at')
        batch_op.drop_column('file_name')

    with op.batch_alter_table('expense_approval_workflow', schema=None) as batch_op:
        batch_op.add_column(sa.Column('approval_date', mysql.TIMESTAMP(), nullable=True))
        batch_op.add_column(sa.Column('approval_status', mysql.VARCHAR(length=50), server_default=sa.text("'Pending'"), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('expense_approval_workflow_ibfk_1', 'expenses', ['expense_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('expense_approval_workflow_ibfk_2', 'users', ['approver_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('status')
        batch_op.drop_column('reviewer_id')
        batch_op.drop_column('supervisor_id')
        batch_op.drop_column('officer_id')

    with op.batch_alter_table('document_uploads', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('document_type', mysql.VARCHAR(length=50), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('document_uploads_ibfk_1', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('uploaded_by')
        batch_op.drop_column('file_type')
        batch_op.drop_column('file_name')

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('name', ['name'], unique=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('branch_id')

    with op.batch_alter_table('cash_advance', schema=None) as batch_op:
        batch_op.add_column(sa.Column('approval_date', sa.DATE(), nullable=True))
        batch_op.add_column(sa.Column('proforma_invoice', sa.BLOB(), nullable=True))
        batch_op.add_column(sa.Column('request_date', sa.DATE(), server_default=sa.text('(curdate())'), nullable=True))
        batch_op.add_column(sa.Column('branch', mysql.VARCHAR(length=255), nullable=False))
        batch_op.add_column(sa.Column('management_approval_doc', sa.BLOB(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('cash_advance_ibfk_1', 'users', ['officer_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('purpose',
               existing_type=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('officer_id',
               existing_type=mysql.INTEGER(),
               nullable=True)

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.add_column(sa.Column('table_name', mysql.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('new_value', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('previous_value', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('timestamp', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('audit_log_ibfk_1', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('action',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('created_at')
        batch_op.drop_column('performed_by')

    op.create_table('statuses',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('statuses', schema=None) as batch_op:
        batch_op.create_index('name', ['name'], unique=True)

    op.create_table('flask_limiter',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('value', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('expiry', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('transactions',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('request_type', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('request_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', mysql.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('transaction_date', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('status', mysql.VARCHAR(length=50), server_default=sa.text("'Pending'"), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('rate_limit',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('value', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('expiry', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('rate_limit', schema=None) as batch_op:
        batch_op.create_index('unique_key', ['key'], unique=True)

    op.create_table('users',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('first_name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('last_name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('password', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('role_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('department_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', mysql.TINYINT(display_width=1), server_default=sa.text("'1'"), autoincrement=False, nullable=True),
    sa.Column('email_verified', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.Column('is_deleted', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='users_ibfk_2', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='users_ibfk_1', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('username', ['username'], unique=True)
        batch_op.create_index('email', ['email'], unique=True)

    op.create_table('expenses',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('amount', mysql.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('status_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('department_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('management_approval_document', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('proforma_invoice_document', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('is_deleted', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='expenses_ibfk_2', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='expenses_ibfk_3', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], name='expenses_ibfk_1', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('roles',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index('name', ['name'], unique=True)

    op.create_table('notifications',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', mysql.TEXT(), nullable=False),
    sa.Column('notification_type', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('is_read', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
